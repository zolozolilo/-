import android.app.Notification
import android.app.PendingIntent
import android.content.Intent
import android.net.VpnService
import android.os.Build
import android.os.ParcelFileDescriptor
import androidx.core.app.NotificationCompat
import androidx.core.content.ContextCompat
import java.io.FileInputStream
import java.io.FileOutputStream

class MyVpnService : VpnService() {

    private lateinit var vpnThread: Thread
    private lateinit var vpnInterface: ParcelFileDescriptor
    private val NOTIFICATION_ID = 1

    override fun onStartCommand(intent: Intent?, flags: Int, startId: Int): Int {
        startVpn()
        return START_STICKY
    }

    private fun startVpn() {
        vpnThread = Thread {
            try {
                // Создание нового VPN Builder
                val builder = Builder()

                // Настройка параметров VPN
                builder.setSession(getString(R.string.app_name))
                    .addAddress("10.0.0.1", 24)
                    .addDnsServer("8.8.8.8")
                    .addRoute("0.0.0.0", 0)
                    .setMtu(1500)

                // Установка VPN-соединения
                vpnInterface = builder.establish()

                // Перенаправление сетевого трафика через интерфейс VPN
                val vpnInput = FileInputStream(vpnInterface.fileDescriptor)
                val vpnOutput = FileOutputStream(vpnInterface.fileDescriptor)

                while (true) {
                    // Чтение входящего сетевого трафика из vpnInput
                    // Обработка трафика по мере необходимости

                    // Запись исходящего сетевого трафика в vpnOutput
                    // Отправка трафика через интерфейс VPN
                }
            } catch (e: Exception) {
                // Обработка ошибок соединения с VPN
                e.printStackTrace()
            } finally {
                stopVpn()
            }
        }

        vpnThread.start()
    }

    private fun stopVpn() {
        try {
            vpnInterface.close()
        } catch (e: Exception) {
            e.printStackTrace()
        }
    }

    override fun onDestroy() {
        super.onDestroy()
        stopVpn()
    }

    // Добавление Foreground Service для улучшения пользовательского опыта
    private fun startForegroundService() {
        val notificationIntent = Intent(this, MainActivity::class.java)
        val pendingIntent = PendingIntent.getActivity(this, 0, notificationIntent, 0)

        val notification: Notification = NotificationCompat.Builder(this, CHANNEL_ID)
            .setContentTitle("My VPN Service")
            .setContentText("VPN is running...")
            .setSmallIcon(R.drawable.ic_notification)
            .setContentIntent(pendingIntent)
            .setOngoing(true)
            .build()

        startForeground(NOTIFICATION_ID, notification)
    }

    override fun onCreate() {
        super.onCreate()
        startForegroundService()
    }
}
